import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

// For any project that contains tasks with type "JavaCompile"
// Eg. You would use "tasks.withType(JavaCompile)" in projects like Android projects
// that do not allow you to specify the "java" plugin
// See: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.compile.JavaCompile.html
tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.sourceCompatibilityVersion
    targetCompatibility = rootProject.ext.sourceCompatibilityVersion

    // Show all warnings except boot classpath
    options.compilerArgs << "-Xlint:all"                        // Turn on all warnings
    options.compilerArgs << "-Xlint:-options"                   // Turn off "missing" bootclasspath warning
    options.compilerArgs << "-Werror"                           // Turn warnings into errors
    options.compilerArgs << "-Xdiags:verbose"                   // Turn on verbose errors
    options.encoding = "utf-8"
    options.incremental = true
    options.fork = true
}

// For any project that contains tasks with type "GroovyCompile"
// Eg. You would use "tasks.withType(GroovyCompile)" in projects like Android projects
// that do not allow you to specify the "groovy" plugin
// See: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.compile.GroovyCompile.html
tasks.withType(GroovyCompile) {
    sourceCompatibility = rootProject.ext.sourceCompatibilityVersion
    targetCompatibility = rootProject.ext.sourceCompatibilityVersion

    // Show all warnings except boot classpath
    options.compilerArgs << "-Xlint:all"                        // Turn on all warnings
    options.compilerArgs << "-Xlint:-options"                   // Turn off "missing" bootclasspath warning
    options.compilerArgs << "-Werror"                           // Turn warnings into errors
    options.compilerArgs << "-Xdiags:verbose"                   // Turn on verbose errors
    options.encoding = "utf-8"
    options.incremental = true
    options.fork = true

    groovyOptions.encoding = "utf-8"
    groovyOptions.fork = true
}

// For any project that contains tasks with type "Test"
// Eg. You would use "tasks.withType(Test)" in projects like Android projects
// that do not allow you to specify the "java" plugin
// See: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html
tasks.withType(Test) {
    testLogging {
        exceptionFormat = TestExceptionFormat.FULL
        showCauses = true
        showExceptions = true
        showStackTraces = true
        events = [TestLogEvent.FAILED, TestLogEvent.SKIPPED]
    }

    def maxWorkerCount = gradle.startParameter.maxWorkerCount
    maxParallelForks = (maxWorkerCount < 2) ? 1 : maxWorkerCount / 2
}

// For any project that contains tasks with type "Javadoc"
// See: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.javadoc.Javadoc.html
tasks.withType(Javadoc) {
    title = project.description
    options.header = project.description
    options.windowTitle = "Documentation"
    options.docTitle = "Documentation"
    options.bottom = "Copyright &copy; 2015-" + Calendar.getInstance().get(Calendar.YEAR) + ", Jared Burrows"
    options.memberLevel = JavadocMemberLevel.PROTECTED
    options.links = ["http://docs.oracle.com/javase/8/docs/api/",
                     "http://docs.oracle.com/javase/7/docs/api/"]
    options.encoding = "utf-8"
    options.docEncoding = "utf-8"
    options.charSet = "utf-8"
    if (JavaVersion.current().isJava8Compatible()) {
        options.addStringOption("Xdoclint:none", "-quiet")
    }
}

// For any project that contains tasks with type "GroovyDoc"
// See: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.javadoc.Groovydoc.html
tasks.withType(Groovydoc) {
    docTitle = "Documentation"
    header = project.description
    windowTitle = "Documentation"
    footer = "Copyright &copy; 2015-" + Calendar.getInstance().get(Calendar.YEAR) + ", Jared Burrows"
    links = ["http://docs.oracle.com/javase/8/docs/api/",
             "http://docs.oracle.com/javase/7/docs/api/",
             "http://docs.groovy-lang.org/docs/groovy-2.4.7/html/gapi/"]
}

// For any project that contains tasks with type "JavaForkOptions"
// See: https://docs.gradle.org/current/javadoc/org/gradle/process/JavaForkOptions.html
tasks.withType(JavaForkOptions) {
    // Prevent forked processes from stealing focus (on MacOS at least)
    jvmArgs = ["-XX:+UseCompressedOops",
               "-Djava.awt.headless=true",
               "-Dapple.awt.UIElement=true"]
}
