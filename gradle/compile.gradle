tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.javaVersion
    targetCompatibility = rootProject.ext.javaVersion

    configure(options) {
        compilerArgs << "-Xlint:all"            // Turn on all warnings
        compilerArgs << "-Werror"               // Turn warnings into errors
        encoding = "utf-8"
        fork = true
    }
}

tasks.withType(GroovyCompile) {
    sourceCompatibility = rootProject.ext.javaVersion
    targetCompatibility = rootProject.ext.javaVersion

    configure(options) {
        compilerArgs << "-Xlint:all"            // Turn on all warnings
        compilerArgs << "-Werror"               // Turn warnings into errors
        encoding = "utf-8"
        fork = true
    }

    configure(groovyOptions) {
        encoding = "utf-8"
        fork = true
    }
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
        events = ["failed", "skipped"]
    }

    failFast = true
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

tasks.withType(JavaForkOptions) {
    // Prevent forked processes from stealing focus (on MacOS at least)
    jvmArgs << "-XX:+UseCompressedOops"
    jvmArgs << "-Djava.awt.headless=true"
    jvmArgs << "-Dapple.awt.UIElement=true"
}
