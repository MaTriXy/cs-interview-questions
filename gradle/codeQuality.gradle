apply plugin: "pmd"
apply plugin: "jacoco"
apply plugin: "findbugs"
apply plugin: "checkstyle"
apply plugin: "codenarc"

// Returns lower coverage because of private constructions
tasks.withType(JacocoReport) {
    reports {
        xml {
            enabled = true // coveralls plugin depends on xml format report
        }

        html {
            enabled = true
        }
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ["codeeval/**",
                              "crackingthecode/part3knowledgebased/**",
                              "**/Chapter7ObjectOrientedDesign**",
                              "**/Chapter11Testing**",
                              "**/Chapter12SystemDesignAndMemoryLimits**"])
        })
    }
}

// Ignores private constructors
cobertura {
    coverageFormats = ['xml', 'html']
    coverageExcludes = [".*codeeval.*",
                        ".*crackingthecode.part3knowledgebased.*",
                        ".*Chapter7ObjectOrientedDesign.*",
                        ".*Chapter11Testing.*",
                        ".*Chapter12SystemDesignAndMemoryLimits.*"]
    coverageIgnoreTrivial = true
}

tasks.withType(FindBugs) {
    reports {
        xml {
            enabled = false
        }

        html {
            enabled = true
        }
    }

    effort = "max"
    reportLevel = "high"
}

tasks.withType(Pmd) {
    reports {
        xml {
            enabled = false
        }

        html {
            enabled = true
        }
    }
}

tasks.withType(CodeNarc) {
    reports {
        xml {
            enabled = false
        }

        html {
            enabled = true
        }
    }
}

codenarc {
    reportFormat = "console"
}
