buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" } // Mirrors jcenter() and mavenCentral()
    }

    dependencies {
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.8"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.12.0"
    }
}

repositories {
    maven { url "https://plugins.gradle.org/m2/" } // Mirrors jcenter() and mavenCentral()
}

apply plugin: "c"
apply plugin: "cunit-test-suite"
apply plugin: "cpp"
apply plugin: "google-test-test-suite"
apply plugin: "java"
apply plugin: "groovy"
apply plugin: "com.github.ben-manes.versions"
apply from: rootProject.file('gradle/compile.gradle')
apply from: rootProject.file('gradle/codeQuality.gradle')

model {
    repositories {
        libs(PrebuiltLibraries) {
            // TODO dynamically download, brew install cunit, then use gradlew check
            cunit {
                headers.srcDir "/usr/local/Cellar/cunit/2.1-3/include"

                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("/usr/local/Cellar/cunit/2.1-3/lib/libcunit.a")
                }
            }

            googleTest {
                headers.srcDir "/usr/local/Cellar/gtest/include/"

                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file("/usr/local/Cellar/gtest/libgtest.a")
                }
            }
        }
    }

    components {
        crackingthecode_c(NativeLibrarySpec) {
            sources {
                c {
                    source {
                        srcDir "src/main/c/crackingthecode"
                        include "**/*.c"
                    }

                    exportedHeaders {
                        srcDir "src/main/c/crackingthecode/include"
                    }
                }
            }
        }

        crackingthecode_cpp(NativeLibrarySpec) {
            sources {
                cpp {
                    source {
                        srcDir "src/main/cpp/crackingthecode"
                        include "**/*.cpp"
                    }

                    exportedHeaders {
                        srcDir "src/main/cpp/crackingthecode/include"
                    }
                }
            }
        }
    }

    testSuites {
        crackingthecode_cTest(CUnitTestSuiteSpec) {
            sources {
                c {
                    source {
                        srcDir "src/test/c/crackingthecode"
                        include "**/*.c"
                    }

                    exportedHeaders {
                        srcDir "src/test/c/crackingthecode/include"
                    }
                }
            }

            testing $.components.crackingthecode_c
        }

        crackingthecode_cppTest(GoogleTestTestSuiteSpec) {
            sources {
                cpp {
                    source {
                        srcDir "src/test/cpp/crackingthecode"
                        include "**/*.cpp"
                    }

                    exportedHeaders {
                        srcDir "src/test/cpp/crackingthecode/include"
                    }
                }
            }

            testing $.components.crackingthecode_cpp
        }
    }

    binaries {
        withType(CUnitTestSuiteBinarySpec) {
            lib library: "cunit", linkage: "static"
        }

        withType(GoogleTestTestSuiteBinarySpec) {
            lib library: "googleTest", linkage: "static"
        }
    }
}

dependencies {
    compile "com.google.code.findbugs:annotations:3.0.1"

    testCompile localGroovy()
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4", { exclude module: "groovy-all" }
    testCompile "nl.jqno.equalsverifier:equalsverifier:2.1"
    testCompile "cglib:cglib-nodep:3.2.2"

    checkstyle "com.puppycrawl.tools:checkstyle:6.19"
}
